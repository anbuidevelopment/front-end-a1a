import { useCallback, useState } from 'react';
import { StyleInfoDataAutoComplete, StyleInfoDataInputText, StyleMasterConfigData } from '@/features/style_info';

export const UseStyleConfigData = () => {
  const [styleConfigData, setStyleConfigData] = useState<StyleMasterConfigData[]>(
    [{
      styleMasterId: '',
      styleMasterCode: '',
      season: '',
      stage: '',
      optionNo: '',
      customerCode: '',
      customerPatternCode: '',
      tacRouteNumber: '',
      a1aRouteNumber: '',
      productType: '',
      factoryAllocation: '',
      merAccountName: '',
      status: '',
      cuttingSMV: undefined,
      sewing: undefined,
      inspect: undefined,
      press: undefined,
      finishing: undefined,
      totalSIPFSMV: undefined,
      bondingProcess: undefined,
      bondingPosition: undefined,
      bondingTotalSMV: undefined,
      laserPosition: undefined,
      laserTotalSMV: undefined,
      totalBondingSMV: undefined,
      htSmall: undefined,
      htBig: undefined,
      htTotalPosition: undefined,
      htEmbroideryBacking: undefined,
      embPosition: undefined,
      embBadgeLogo: undefined,
      embTotalStitch: undefined,
      embTotalSMV: undefined,
      padPrintPosition: undefined,
      padPrintTotalSMV: undefined,
      screenPrintPosition: undefined,
      screenPrintPrinter: '',
      sublimationPosition: undefined,
      sublimationPrinter: '',
      refStyleMasterId: undefined,
      isActive: 1,
      bondingItem: undefined,
      screenSublimationItem: undefined,
      screenPrintItem: undefined,
    }],
  );
  const setStyleConfig = useCallback((dataAutoComplete: StyleInfoDataAutoComplete, dataInputText: StyleInfoDataInputText, refStyleMasterId: number | undefined, isActive: number | undefined) => {
    const updateStyleConfigData: StyleMasterConfigData[] = [
      {
        styleMasterId: dataAutoComplete.styleMasterId?.value,
        styleMasterCode: dataAutoComplete.styleMasterCode?.value,
        season: dataAutoComplete.season?.value,
        stage: dataAutoComplete.stage?.value,
        optionNo: dataAutoComplete.optionNo?.value,
        customerCode: dataAutoComplete.customerCode?.value,
        customerPatternCode: dataAutoComplete.customerPatternCode?.value,
        tacRouteNumber: dataAutoComplete.tacRouteNumber?.value,
        a1aRouteNumber: dataAutoComplete.a1aRouteNumber?.value,
        productType: dataAutoComplete.productType?.value,
        factoryAllocation: dataAutoComplete.factoryAllocation?.value,
        merAccountName: dataAutoComplete.merAccountName?.value,
        status: dataAutoComplete.status?.value,
        cuttingSMV: dataInputText.cuttingSMV,
        sewing: dataInputText.sewing,
        inspect: dataInputText.inspect,
        press: dataInputText.press,
        finishing: dataInputText.finishing,
        totalSIPFSMV: dataInputText.totalSIPFSMV,
        bondingProcess: dataInputText.bondingProcess,
        bondingPosition: dataInputText.bondingPosition,
        bondingTotalSMV: dataInputText.bondingTotalSMV,
        laserPosition: dataInputText.laserPosition,
        laserTotalSMV: dataInputText.laserTotalSMV,
        totalBondingSMV: dataInputText.totalBondingSMV,
        htSmall: dataInputText.htSmall,
        htBig: dataInputText.htBig,
        htTotalPosition: dataInputText.htTotalPosition,
        htEmbroideryBacking: dataInputText.htEmbroideryBacking,
        embPosition: dataInputText.embPosition,
        embBadgeLogo: dataInputText.embBadgeLogo,
        embTotalStitch: dataInputText.embTotalStitch,
        embTotalSMV: dataInputText.embTotalSMV,
        padPrintPosition: dataInputText.padPrintPosition,
        padPrintTotalSMV: dataInputText.padPrintTotalSMV,
        screenPrintPosition: dataInputText.screenPrintPosition,
        screenPrintPrinter: dataInputText.screenPrintPrinter,
        sublimationPosition: dataInputText.sublimationPosition,
        sublimationPrinter: dataInputText.sublimationPrinter,
        refStyleMasterId: refStyleMasterId,
        isActive: isActive,
        bondingItem: dataInputText.bondingItem,
        screenSublimationItem: dataInputText.screenSublimationItem,
        screenPrintItem: dataInputText.screenPrintItem,
      },
    ];
    setStyleConfigData(updateStyleConfigData);
  }, [styleConfigData]);
  return { styleConfigData, setStyleConfig };
};